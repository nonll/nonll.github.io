<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>conda配置</title>
    <link href="/2024/12/01/conda%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/12/01/conda%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="安装miniconda"><a href="#安装miniconda" class="headerlink" title="安装miniconda"></a>安装miniconda</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><h3 id="1-安装准备工作"><a href="#1-安装准备工作" class="headerlink" title="1. 安装准备工作"></a>1. 安装准备工作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt-get update <br><span class="hljs-built_in">sudo</span> apt-get install build-essential<br><span class="hljs-built_in">sudo</span> apt-get install wget<br></code></pre></td></tr></table></figure><p>其中，第一条命令表示更新包列表，第二条命令表示安装构建必需工具，第三条命令表示安装wget，用于从网络下载miniconda安装包。</p><h3 id="2-下载miniconda安装包"><a href="#2-下载miniconda安装包" class="headerlink" title="2. 下载miniconda安装包"></a>2. 下载miniconda安装包</h3><p>可以通过官方网站<a href="https://docs.conda.io/en/latest/miniconda.html">下载</a>miniconda安装包，也可以使用wget从命令行中下载安装包。</p><p><code>wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</code></p><p>下载完成后，使用以下命令给下载的安装包添加可执行权限：<br><code>chmod +x Miniconda3-latest-Linux-x86_64.sh</code> </p><h3 id="3-安装miniconda"><a href="#3-安装miniconda" class="headerlink" title="3. 安装miniconda"></a>3. 安装miniconda</h3><p>使用以下命令安装miniconda：</p><blockquote><p>-p 指定安装路径</p></blockquote><p><code>sudo sh Miniconda3-latest-Linux-x86_64.sh -p /opt/Miniconda3</code></p><p>安装过程中会出现一些提示，一般来说只需要按照提示按回车键即可。在安装过程中，需要同意许可协议并选择安装路径。如果不确定安装路径，可以选择默认路径。</p><h3 id="4-配置环境变量"><a href="#4-配置环境变量" class="headerlink" title="4. 配置环境变量"></a>4. 配置环境变量</h3><p>安装完成后，需要配置miniconda的环境变量，这样才能在终端中使用conda命令。<br>首先，需要打开.bashrc文件：</p><p><code>vi ~/.bashrc</code></p><p>在文件末尾添加以下内容：</p><p><code>export PATH=&quot;/opt/Miniconda3/bin:$PATH&quot;</code></p><p>其中，username应替换为自己的用户名，安装路径也可能不同。<br>在保存文件并退出后，使用以下命令使配置生效：<br><code>source ~/.bashrc</code><br>现在，可以在终端中使用conda命令了。</p><h3 id="5-添加conda源"><a href="#5-添加conda源" class="headerlink" title="5. 添加conda源"></a>5. 添加conda源</h3><p>如果直接使用官方源下载软件包速度较慢，可以添加清华大学的源来加速下载。</p><p>打开终端，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/<br>conda config --<span class="hljs-built_in">set</span> show_channel_urls <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><p>以上命令将清华大学的conda源添加到本地的配置文件中。之后，conda会优先从清华大学的源中下载软件包。</p><h3 id="6-建立新环境"><a href="#6-建立新环境" class="headerlink" title="6. 建立新环境"></a>6. 建立新环境</h3><p>可以通过conda命令来建立新环境。例如，以下命令将创建名为myenv的环境：</p><p><code>conda create -n myenv</code><br>创建完成后，需要激活环境。使用以下命令激活myenv环境：</p><p><code>conda activate myenv</code></p><h3 id="7-其它"><a href="#7-其它" class="headerlink" title="7. 其它"></a>7. 其它</h3><ol><li>不自动激活base环境 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 不自动激活base环境</span><br>conda config --<span class="hljs-built_in">set</span> auto_activate_base <span class="hljs-literal">false</span><br><span class="hljs-comment"># 自动激活base环境</span><br>conda config --<span class="hljs-built_in">set</span> auto_activate_base <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li><li>运行  <code>conda info</code> 命令，出现<code> base environment：...(onlyread)</code>。即无法创建新环境。</li></ol><p>只需修改anaconda3文件夹权限，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注意 username改为自己的用户名</span><br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chown</span> -R username /opt/Miniconda3<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chown</span> -R username .conda<br></code></pre></td></tr></table></figure><ol start="3"><li>.condarc文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">channels:<br><span class="hljs-comment"># 源</span><br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/<br>  - defaults<br>envs_dirs:<br><span class="hljs-comment"># 环境安装路径</span><br>  - /opt/miniconda3/envs<br>pkgs_dirs:<br><span class="hljs-comment"># 包，库下载路径</span><br>  - /opt/miniconda3/pkgs<br>show_channel_urls: <span class="hljs-literal">true</span><br><span class="hljs-comment"># 不自动激活base环境</span><br>auto_activate_base: <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>conda，python，环境配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Hexo的主题Fluid搭建Github博客</title>
    <link href="/2024/11/30/%E5%9F%BA%E4%BA%8EHexo%E7%9A%84%E4%B8%BB%E9%A2%98Fluid%E6%90%AD%E5%BB%BAGithub%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/11/30/%E5%9F%BA%E4%BA%8EHexo%E7%9A%84%E4%B8%BB%E9%A2%98Fluid%E6%90%AD%E5%BB%BAGithub%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="一-、配置Git和Github"><a href="#一-、配置Git和Github" class="headerlink" title="一 、配置Git和Github"></a>一 、配置Git和Github</h2><h3 id="1-使用scoop安装git"><a href="#1-使用scoop安装git" class="headerlink" title="1.  使用scoop安装git"></a>1.  使用scoop安装git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">scoop install git<br></code></pre></td></tr></table></figure><h3 id="2-设置全局用户名和邮箱"><a href="#2-设置全局用户名和邮箱" class="headerlink" title="2. 设置全局用户名和邮箱"></a>2. 设置全局用户名和邮箱</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;Your Name&quot;</span> <br>git config --global user.email <span class="hljs-string">&quot;your_email@example.com&quot;</span><br></code></pre></td></tr></table></figure><h3 id="3-生成SSH密钥对"><a href="#3-生成SSH密钥对" class="headerlink" title="3. 生成SSH密钥对"></a>3. 生成SSH密钥对</h3><blockquote><p>默认文件路径和文件名（通常是<code>~/.ssh/id_rsa</code>和<code>~/.ssh/id_rsa.pub</code>）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -b 4096 -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br></code></pre></td></tr></table></figure><h3 id="4-添加SSH公钥到GitHub"><a href="#4-添加SSH公钥到GitHub" class="headerlink" title="4. 添加SSH公钥到GitHub"></a>4. 添加SSH公钥到GitHub</h3><blockquote><p>复制<code>~/.ssh/id_rsa.pub</code>内容到github</p></blockquote><h3 id="5-测试SSH连接"><a href="#5-测试SSH连接" class="headerlink" title="5. 测试SSH连接"></a>5. 测试SSH连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><h2 id="二、node-js安装和环境配置"><a href="#二、node-js安装和环境配置" class="headerlink" title="二、node.js安装和环境配置"></a>二、node.js安装和环境配置</h2><h3 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1.安装node.js"></a>1.安装node.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装node.js</span><br>scoop install nodejs<br><span class="hljs-comment"># 验证</span><br>node -v  <br>npm -v <span class="hljs-comment">#nodejs安装默认附带安装npm</span><br></code></pre></td></tr></table></figure><h3 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2. 配置环境变量"></a>2. 配置环境变量</h3><p>在nodejs安装目录下创建node_global，node_cache两个文件夹（全局安装的模块路径和缓存路径）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> prefix <span class="hljs-string">&quot;D:\nodejs\node_global&quot;</span>  <br>npm config <span class="hljs-built_in">set</span> cache <span class="hljs-string">&quot;D:\nodejs\node_cache&quot;</span>  <br><span class="hljs-comment"># 如显示权限不够，用管理员打开cmd</span><br></code></pre></td></tr></table></figure><p>防止npm下载过慢，使用国内淘宝镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org<br><span class="hljs-comment"># 或者</span><br>https://registry.npmmirror.com/<br></code></pre></td></tr></table></figure><h2 id="三、下载Hexo并配置fluid主题"><a href="#三、下载Hexo并配置fluid主题" class="headerlink" title="三、下载Hexo并配置fluid主题"></a>三、下载Hexo并配置fluid主题</h2><h3 id="1-下载Hexo"><a href="#1-下载Hexo" class="headerlink" title="1. 下载Hexo"></a>1. 下载Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g  <br><span class="hljs-comment"># ***.github.io是一个文件夹</span><br>hexo init ***.github.io <span class="hljs-comment"># 这里替换成你自己的，为后续更新到github上，使用github名字.github,io  </span><br><span class="hljs-built_in">cd</span> ***.github.io <span class="hljs-comment"># 进入本地的博客文件夹  </span><br>npm install  <br>hexo server <span class="hljs-comment"># 打开本地服务器预览</span><br></code></pre></td></tr></table></figure><h3 id="2-配置fluid"><a href="#2-配置fluid" class="headerlink" title="2. 配置fluid"></a>2. 配置fluid</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装fluid主题</span><br>npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p> 配置fluid<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"> <span class="hljs-comment"># 修改博客目录中的 _config.yml，修改两个字段：</span><br>language: zh-CN <span class="hljs-comment"># 指定中文  </span><br>theme: fluid <span class="hljs-comment"># 指定主题</span><br></code></pre></td></tr></table></figure></p><h3 id="3-部署到github"><a href="#3-部署到github" class="headerlink" title="3. 部署到github"></a>3. 部署到github</h3><p>修改博客根目录下的_config.yml文件中的deploy<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:  <br><span class="hljs-built_in">type</span>: git  <br>repo: git@github.com:**/**.github.io.git <span class="hljs-comment"># 这里我用的是ssh，也可以用https，可能会报错，设置token即可  **为用户名</span><br>branch: main <span class="hljs-comment"># 注意自己创建的分支，我的是main，有可能是master</span><br></code></pre></td></tr></table></figure><br>安装hexo-deployer-git自动部署发布工具，将hexo 部署到 git page 的 deployer</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>更新博客之后，可以通过如下命令就行上传github</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean <span class="hljs-comment"># 清空一下缓存，有时候博客页面显示不正常也可以试试这个命令行  </span><br>hexo g <span class="hljs-comment"># 是hexo generate的简写，把刚刚做的改动生成更新一下  </span><br>hexo server <span class="hljs-comment"># 在本地服务器看看博客有没有更新成NexT主题：https://localhost:4000  </span><br>hexo d <span class="hljs-comment"># hexo deploy，如果本地服务器看了没问题就可以上传到github网站</span><br></code></pre></td></tr></table></figure><blockquote><p>直接使用 hexo d 部署到 GitHub，将会报错</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global core.safecrlf <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="四、其它配置"><a href="#四、其它配置" class="headerlink" title="四、其它配置"></a>四、其它配置</h2><h3 id="1-latex配置"><a href="#1-latex配置" class="headerlink" title="1. latex配置"></a>1. latex配置</h3><blockquote><p>hexo 默认不支持latex[（以下二选一）</p></blockquote><ol><li>在md文件中，添加以下代码</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span></span><br><span class="hljs-tag"></span><br><span class="hljs-tag"><span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>或 (推荐以下方式)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/x-mathjax-config&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-title class_">MathJax</span>.<span class="hljs-property">Hub</span>.<span class="hljs-title class_">Config</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">tex2jax</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">skipTags</span>: [<span class="hljs-string">&#x27;script&#x27;</span>, <span class="hljs-string">&#x27;noscript&#x27;</span>, <span class="hljs-string">&#x27;style&#x27;</span>, <span class="hljs-string">&#x27;textarea&#x27;</span>, <span class="hljs-string">&#x27;pre&#x27;</span>],</span><br><span class="language-javascript">            <span class="hljs-attr">inlineMath</span>: [[<span class="hljs-string">&#x27;$&#x27;</span>,<span class="hljs-string">&#x27;$&#x27;</span>]]</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>Hexo添加mathjax</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm uninstall hexo-math --save<br><br>npm install hexo-renderer-mathjax --save<br></code></pre></td></tr></table></figure><p>$$<br>E&#x3D;mc^2<br>$$</p><p><img src="/../images/%E6%B5%8B%E8%AF%95/1.jpg" alt="图片"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://qzkq.github.io/2022/05/20/%E5%9F%BA%E4%BA%8EHexo%E7%9A%84%E4%B8%BB%E9%A2%98Fluid%E6%90%AD%E5%BB%BAGithub%E5%8D%9A%E5%AE%A2/#%E4%B8%89%E3%80%81%E4%B8%8B%E8%BD%BDHexo%E5%B9%B6%E9%85%8D%E7%BD%AEfluid%E4%B8%BB%E9%A2%98">基于Hexo的主题Fluid搭建Github博客 - 幸运藏在努力里</a><br><a href="https://zhuanlan.zhihu.com/p/3713824596">利用Github+Hexo打造自己的永久Blog</a><br><a href="https://zhenyumi.top/posts/4cba9f03/">Hexo Fluid使用utterances评论系统，以及相关异常处理 - 鹘横海</a><br><a href="https://www.jianshu.com/p/9b9c241146bc">Hexo渲染LaTeX公式</a></p><head>    <script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"></script>    <script type="text/x-mathjax-config">        MathJax.Hub.Config({            tex2jax: {            skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'],            inlineMath: [['$','$']]            }        });    </script></head>]]></content>
    
    
    <categories>
      
      <category>配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>关于</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
</search>
